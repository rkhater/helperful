= Helperful

  http://code.simonecarletti.com/projects/show/helperful
  http://github.com/weppos/helperful/

Helperful aims to be a collection of useful and reusable Rails helpers.

*WARNING*: This library has not been released yet. This package seems stable, but should be considered a development release. You should not use it in production.
Changes to specifications may occur at any time and without notice. For the full list of changes look at the CHANGELOG file.


== Getting Started

Helper methods are grouped into different files according to their scope.

Before using an helper method you should include the helper file in your Rails application,
as you would expected to do for a standard Rails helper.
All helpers belongs to the Helperful namespace to prevent conflicts with default Rails helpers.
Don't forget to add the namespace when including an helper from your controller.

  class MyController < ApplicationController

    # include the title_helper
    helper 'helperful/title'

    # include the title_helper passing the qualified the module name
    helper Helperful::TitleHelper

  end


Moreover, the <tt>Helperful</tt> library provides a helpful method called <tt>helperful</tt>. 
It aliases the standard Rails <tt>ActionController::Base#helper</tt> method with the exception that it automatically prepends the <tt>helperful</tt> namespace when necessary.

  class MyController < ApplicationController

    # include the title_helper
    helperful :title

    # include the title_helper passing the qualified the module name
    helperful Helperful::TitleHelper

  end


The following lines are equivalent:

  helper    'helperful/title'
  helper    :'helperful/title'
  helper    Helperful::TitleHelper
  helperful 'title'
  helperful :title
  helperful Helperful::TitleHelper


The <tt>helperful</tt> methods accepts any parameter accepted by the original <tt>helper</tt> method.
  
  helper    'helperful/title', 'helperful/affiliations'
  helperful :title, :affiliations


See the Rails documentation for <tt>ActionController::Base#helper</tt> method
for more details about how to include an helper into a Rails application.

Once included, all helper methods are available in the View.

  <html>
    <title><%= title 'This is a title' %></title>
    <body>
      <%= yield %>
    </body>
  </html>


== Helpers

This is a short description of all available helpers.
Please refer to the documentation available at the beginning of any helper file for further details.

=== Affiliations Helper

Provides a set of helpers for working with online affiliations.

The <tt>tradedoubler_verification_tag</tt> helper method returns the site verification tag required by {Tradedoubler}[http://www.tradedoubler.com/] to verify the publisher account ownership.

  # In your template
  <html>
    <head>
      <%= tradedoubler_verification_tag('00112233') %>
    </head>
    <body>
      This is your page content.
    </body>
  </html>
  
  # Will produce the following output.
  <html>
    <head>
      <%= tradedoubler_verification_tag('00112233') %>
    </head>
    <body>
      <!-- TradeDoubler site verification 00112233 -->
    </body>
  </html>


=== Title Helper

Provides an helper for managing page title in Rails views and layouts.

  # Include the helper in your controller.
  # You might want to include it in ApplicationController to make it available
  # always and everywhere in your templates.
  class ApplicationController < ActionController::Base
    helperful :title
  end

  # Now you can use set a title in your action
  # Example. index.html.rb
  <h1><%= title 'This is a title' %></h1>

  # And print the title with a :site decorator in your layout.
  <html>
    <head>
      <title><%= title :site => 'My Cool Site!' %></title>
    </head>
    <body>
      <%= yield %>
    </body>
  </html>

Originally available at http://gist.github.com/3840.


== Credits

Author:: {Simone Carletti}[http://www.simonecarletti.com/] <weppos@weppos.net>
